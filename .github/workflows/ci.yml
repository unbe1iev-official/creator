name: Build, Sign, and Deploy Creator Service

on:
  push:
    branches:
      - off

jobs:
  build_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Harbor
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build --no-cache -t ${{ secrets.HARBOR_REGISTRY }}/${{ github.event.repository.name }}-dev:${{ github.run_id }} .

  tagging_and_pushing:
    needs: build_image
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Harbor
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Tag Docker image as latest
        run: |
          docker tag ${{ secrets.HARBOR_REGISTRY }}/${{ github.event.repository.name }}-dev:${{ github.run_id }} ${{ secrets.HARBOR_REGISTRY }}/${{ github.event.repository.name }}-dev:latest

      - name: Push Docker image with run ID tag
        run: |
          docker push ${{ secrets.HARBOR_REGISTRY }}/${{ github.event.repository.name }}-dev:${{ github.run_id }}

      - name: Push Docker image with latest tag
        run: |
          docker push ${{ secrets.HARBOR_REGISTRY }}/${{ github.event.repository.name }}-dev:latest

  sign:
    needs: tagging_and_pushing
    runs-on: ubuntu-latest
    steps:
      - name: Install and sign using Cosign
        run: |
          curl -LO https://github.com/sigstore/cosign/releases/download/v1.4.1/cosign-linux-amd64
          chmod +x cosign-linux-amd64
          mv cosign-linux-amd64 /usr/local/bin/cosign

      - name: Sign Docker image
        run: |
          cosign sign --key ${{ secrets.COSIGN_KEY }} ${{ secrets.HARBOR_REGISTRY }}/${{ github.event.repository.name }}-dev:latest

  deploy:
    needs: sign
    runs-on: ubuntu-latest
    steps:
      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1
        with:
          version: v1.29.0

      - name: Create Docker registry secret
        run: |
          kubectl create secret docker-registry harbor-puller \
            --docker-server=${{ secrets.HARBOR_REGISTRY }} \
            --docker-username=${{ secrets.HARBOR_USERNAME }} \
            --docker-password=${{ secrets.HARBOR_PASSWORD }} \
            --docker-email=${{ secrets.HARBOR_EMAIL }} \
            --namespace=unbe1iev-dev

      - name: Rollout restart deployment
        env:
          KUBECONFIG: /home/${{ secrets.PROJECT_USERNAME }}/.kube/config
        run: |
          kubectl rollout restart deployment ${{ github.event.repository.name }} -n unbe1iev-dev